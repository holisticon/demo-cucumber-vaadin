package de.dlh.lht.wd.base.bpm.client.pageobject;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import com.google.common.base.Preconditions;
import com.google.common.base.Predicate;

public class NavigationTreePageObject extends
        VaadinTreePageObject {

    public NavigationTreePageObject(WebDriver driver) {
        super(driver);
    }

    public TasklistSearchDialogPageObject openTasklistSearchDialog() {
        expand("Aufgaben").select("Suche...").selection().sendKeys(Keys.CONTROL, "f");
        final TasklistSearchDialogPageObject dialog = new TasklistSearchDialogPageObject(driver());
        wait(FIVE_SECONDS).until((Predicate<WebDriver>)new Predicate<WebDriver>() {

            @Override
            public boolean apply(WebDriver arg0) {
                return dialog.isVisible();
            }

        });
        return dialog;
    }

    public NavigationTreePageObject openContextMenuOn(WebElement item) {
        doRightClickOn(item);
        return this;
    }

    public void selectContextMenuItem(String menuName) {
        WebElement element = driver().findElement(By.className("v-contextmenu"));
        WebElement gwtMenuItem = element.findElement(By.className("gwt-MenuItem"));
        WebElement clickable = gwtMenuItem.findElement(By.tagName("div"));
        clickable.click();
    }

    public WebElement itemWithName(String itemName) {
        List<WebElement> itemsWithName = itemsWithName(itemName);
        Preconditions.checkState(!itemsWithName.isEmpty(), String.format("%s not found", itemName));
        return itemsWithName.get(0);
    }

}
